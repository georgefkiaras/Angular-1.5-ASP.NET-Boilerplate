!function(){"use strict";function backendHubProxy($rootScope,$timeout){return function(serverUrl,hubName,groupName,connectionCallback){var connection=$.hubConnection(serverUrl),proxy=connection.createHubProxy(hubName),autoReconnect=!0,invokeFunc=function(methodName,data,callback){proxy.invoke(methodName,data).done(function(result){$rootScope.$apply(function(){callback&&callback(result)})})},joinGroup=function(){null!=groupName&&invokeFunc("joinGroup",groupName,function(){connectionCallback&&connectionCallback()})};return connection.start(joinGroup),connection.reconnected(joinGroup),connection.disconnected(function(){autoReconnect?(console.log("Reconnecting in 5 seconds..."),setTimeout(function(){console.log("attempting to reconnect now.."),connection.start(joinGroup)},5e3)):console.log("%s: Disconnected, not auto re-connecting.",hubName)}),connection.stateChanged(function(change){$.signalR.connectionState.disconnected&&console.log("Disconnected: %s: %s",hubName,groupName),change.newState===$.signalR.connectionState.reconnecting?console.log("Re-connecting: %s: %s",hubName,groupName):change.newState===$.signalR.connectionState.connected&&console.log("Connected: %s: %s",hubName,groupName)}),{on:function(eventName,callback){proxy.on(eventName,function(result){$rootScope.$broadcast("loading-started"),$rootScope.$apply(function(){callback&&callback(result),$timeout(function(){$rootScope.$broadcast("loading-complete")},50)})})},invoke:invokeFunc,disconnect:function(){autoReconnect=!1,connection.stop()}}}}angular.module("backendHubProxy",[]).factory("hubProxy",backendHubProxy),backendHubProxy.$inject=["$rootScope","$timeout"]}(),function(){"use strict";var module=angular.module("loadingIndicator",[]);module.directive("loadingIndicator",function(loadingCounts,$timeout){return{restrict:"A",link:function(scope,element,attrs){scope.$on("loading-started",function(e){loadingCounts.enable_count++,$timeout(function(){loadingCounts.enable_count>loadingCounts.disable_count&&element.css({display:""})},0)}),scope.$on("loading-complete",function(e){loadingCounts.disable_count++,loadingCounts.enable_count==loadingCounts.disable_count&&element.css({display:"none"})})}}}),module.config(function($httpProvider){$httpProvider.interceptors.push(function($q,$rootScope){return{request:function(config){return $rootScope.$broadcast("loading-started"),config||$q.when(config)},response:function(response){return $rootScope.$broadcast("loading-complete"),response||$q.when(response)},responseError:function(rejection){return $rootScope.$broadcast("loading-complete"),$q.reject(rejection)}}})}),module.factory("loadingCounts",function(){return{enable_count:0,disable_count:0}})}(),function(){function localStorage($window){return{getObject:function(key){var objectJson=$window.localStorage.getItem(key);if(null==objectJson)return null;try{return JSON.parse(objectJson)}catch(err){return console.log(err),null}},setObject:function(key,object){$window.localStorage.setItem(key,JSON.stringify(object))}}}angular.module("localStorageService",[]).service("localStorage",localStorage),localStorage.$inject=["$window"]}(),function(){function stopsRepo($http){return{getStop:function(stopId){return $http.get("../../api/Stop/"+stopId).then(function(response){return response.data})},getStops:function(){return $http.get("../../api/Stops/",{cache:!0}).then(function(response){return response.data})}}}angular.module("stopsRepoService",[]).service("stopsRepo",stopsRepo),stopsRepo.$inject=["$http"]}(),function(){"use strict";var module=angular.module("boilerplateModule",["ngComponentRouter","loadingIndicator","backendHubProxy","stopsRepoService","localStorageService"]);module.config(function($locationProvider){$locationProvider.html5Mode(!BoilerplateApp.isIE)}),module.value("$routerRootComponent","boilerplateAppRoot")}(),function(){"use strict";var module=angular.module("boilerplateModule");console.log("boilerplate root."),module.component("boilerplateAppRoot",{templateUrl:"boilerplateApp/boilerplate-app-root.component.html",$routeConfig:[{path:"/stops",component:"stops",name:"Stops"},{path:"/stop/:id",component:"stop",name:"Stop"},{path:"/**",redirectTo:["Stops",""]}]})}(),angular.module("boilerplateModule").component("stop",{templateUrl:"BoilerplateApp/Components/stop.component.html",controllerAs:"model",controller:["hubProxy","stopsRepo",function(hubProxy,stopsRepo){var model=this;model.advisories=new Array,model.$routerOnActivate=function(next,previous){model.id=next.params.id,getStop()},model.time="--:--:--.---";var timeHub=hubProxy("../../","signalHub","clock");timeHub.on("ping",function(data){model.time=data.ServerTime,model.dayOfTheWeek=data.DayOfTheWeek,model.month=data.Month,model.date=data.Date,model.year=data.Year,model.tic=data.Tic,model.toc=!data.Tic}),model.$routerOnDeactivate=function(){timeHub.disconnect()};var getStop=function(){stopsRepo.getStop(model.id).then(function(data){model.stop=data})}}]}),angular.module("boilerplateModule").component("stops",{templateUrl:"boilerplateApp/Components/stops.component.html",controllerAs:"model",controller:["hubProxy","stopsRepo","localStorage",function(hubProxy,stopsRepo,localStorage){var model=this;model.autoReconnect=!0,model.filterObj=new Object,model.time="--:--:--.---";var timeHub=hubProxy("../../","signalHub","clock");timeHub.on("ping",function(data){model.time=data.ServerTime,model.dayOfTheWeek=data.DayOfTheWeek,model.month=data.Month,model.date=data.Date,model.year=data.Year,model.tic=data.Tic,model.toc=!data.Tic}),model.$routerOnDeactivate=function(){timeHub.disconnect()},model.stops=localStorage.getObject("stops"),stopsRepo.getStops().then(function(data){model.stops=data,localStorage.setObject("stops",data)})}]});